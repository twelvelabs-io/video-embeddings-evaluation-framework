dataset_name: anet
train_split: ['training']
val_split: ['validation']

dataset: {
  json_file: ./data/anet/annotations/anet1.3_tsp_filtered.json,
  file_prefix: "",
  file_ext: .npy,
  num_classes: 200,
  trunc_thresh: 0.5,
  crop_ratio: [0.9, 1.0],
  # upsample the features to a fixed length of 192
  max_seq_len: 192,
  force_upsampling: True,
  clip_length: 0.5,
  overlap_ratio: 0.5
}
model: {
  fpn_type: identity,
  backbone_type: convTransformer, # {conv, convTransformer, mamba}
  max_buffer_len_factor: 1.0,
  # 192 - 96 - 48 - 24 - 12 - 6
  n_mha_win_size: [7, 7, 7, 7, 7, -1],
  # shrink the model for reduced input feature channels
  n_head: 4,
  embd_dim: 256,
  fpn_dim: 256,
  head_dim: 256,
  use_abs_pe: False,
}
opt: {
  learning_rate: 0.001,
  epochs: 10,
  weight_decay: 0.05,
}
loader: {
  batch_size: 16,
}
train_cfg: {
  init_loss_norm: 200,
  clip_grad_l2norm: 1.0,
  cls_prior_prob: 0.01,
  center_sample: radius,
  center_sample_radius: 1.5,
  label_smoothing: 0.1,
  droppath: 0.1,
  loss_weight: 2.0,
}

# similar to THUMOS
test_cfg: {
  voting_thresh: 0.9,
  pre_nms_topk: 2000,
  # max of 100 predictions per video
  max_seg_num: 100,
  min_score: 0.001,
  # score fusion
  multiclass_nms: False,
  nms_sigma : 0.75,
  ext_score_file: ./data/anet/annotations/anet_UMTv2_6B_k710+K40_f16_frozenTuning.json_converted.json,
  duration_thresh: 0.001,
}
output_folder: ./ckpt_anet/

